<?xml version="1.0" ?>
<launch>
	<!-- LAUNCH INTERFACE -->

	<arg name="robot_name" 		default="single_lwr_robot"/>
	<arg name="robot_path" 		default="$(find single_lwr_robot)/robot"/>
   	<arg name="t1_limits" 		default="false"/>
    	<arg name="controllers" 	default="one_task_inverse_kinematics joint_position_impedance_controller"/>
    	<arg name="stopped_controllers" default="gravity_compensation_controller"/>
	<arg name="rviz_config" 	default="$(find lwr_launch)/launch/rviz/rviz_config.rviz"/>


	<!-- ROBOT -->
	
    	<group ns="lwr">
		<param name="robot_description" command="$(find xacro)/xacro.py $(arg robot_path)/$(arg robot_name).urdf.xacro"/>
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
        </group>

	<!-- GAZEBO -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param /lwr/robot_description -urdf -model $(arg robot_name)"  respawn="false" output="screen" />
	<!-- enable/disable gui at will, the rviz listens to the simulation -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" 		value="$(find single_lwr_robot)/worlds/simple_environment.world"/>
		<arg name="paused" 		value="false"/>
		<arg name="use_sim_time" 	value="true"/>
		<arg name="gui" 		value="true"/>
		<arg name="headless" 		value="false"/>
		<arg name="debug" 		value="false"/>
	</include>
    
    <!-- Load updated joint limits (override information from single_lwr_moveit) to respect T1 mode limits -->
    <group if="$(arg t1_limits)" ns="robot_description_planning">
        <rosparam command="load" file="$(find single_lwr_robot)/config/t1_joint_limits.yaml"/>
    </group>

    <!-- load robotHW configurations to rosparam server -->
    <rosparam command="load" file="$(find single_lwr_robot)/config/hw_interface.yaml"/>

    <!-- load all controller configurations to rosparam server -->
    <rosparam file="$(find single_lwr_robot)/config/controllers.yaml" command="load"/>

    <!-- real robot and controllers -->
    <group ns="lwr">
	<!-- spawn only desired controllers in current namespace -->
	<node name="controller_spawner_js" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="kuka_joint_state_controller"/>
	<node name="controller_spawner"    pkg="controller_manager" type="spawner" respawn="false" output="screen" args="--stopped $(arg controllers)"/>
	<!--node name="controller_stopper"    pkg="controller_manager" type="spawner" args="-stopped $(arg stopped_controllers)" /-->
    </group>

  <!-- LAUNCH RVIZ -->

  <node name="lwr_rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(arg rviz_config)" output="screen"/>

</launch>
